import groovy.time.TimeCategory
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'com.jfrog.artifactory' version '4.24.18' apply false
}

ext {
    artifactoryLoc = project.hasProperty('artifactory_contextUrl') ? project.artifactory_contextUrl
            : System.getenv()['ARTIFACTORY_URL']

    // Override user and password
    artifactory_user = project.hasProperty('artifactory_user') ? project.artifactory_user
            : System.getenv()['ARTIFACTORY_USER']
    artifactory_password = project.hasProperty('artifactory_password') ? project.artifactory_password
            : System.getenv()['ARTIFACTORY_PASSWORD']

    sourcesRepo = 'ab2d-maven-repo'
    deployerRepo = 'ab2d-test'
    resolverRepo = 'ab2d-test'

    lombokVersion = '1.18.20'
    hapiVersion = '5.4.0'
    spotbugsVersion = '4.2.0'
    junitVersion = '5.7.0'

    failedTests = []
    skippedTests = []
    testSuites = []
}

allprojects {

    tasks.withType(Test) { testTask ->

        testTask.testLogging { logging ->
            events TestLogEvent.FAILED,
                    TestLogEvent.SKIPPED,
                    TestLogEvent.STANDARD_OUT,
                    TestLogEvent.STANDARD_ERROR
            exceptionFormat TestExceptionFormat.FULL
            showExceptions true
            showCauses true
            showStackTraces true
        }

        afterTest { desc, result ->
            if (result.resultType == TestResult.ResultType.FAILURE) {
                rootProject.ext.failedTests.add(desc)
            }

            if (result.resultType == TestResult.ResultType.SKIPPED) {
                rootProject.ext.skippedTests.add(desc)
            }
        }

        afterSuite { desc, result ->
            if (desc.parent) return // Only summarize results for whole modules


            String summary = "${testTask.project.name}:${testTask.name} results: ${result.resultType} " +
                    "(" +
                    "Tests run ${result.testCount}, " +
                    "succeeded ${result.successfulTestCount}, " +
                    "failed ${result.failedTestCount}, " +
                    "skipped ${result.skippedTestCount}" +
                    ") "
            rootProject.ext.testSuites += summary
        }
    }

    repositories {
        maven {
            url = "${artifactoryLoc}/${sourcesRepo}"
            credentials {
                username = project.artifactory_user
                password = project.artifactory_password
            }
        }
    }
}

subprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'pmd'

    println("Is artifactory user set in env var? " + System.getenv().containsKey("ARTIFACTORY_USER"))
    println("Is artifactory password set in env var? " +System.getenv().containsKey("ARTIFACTORY_PASSWORD"))

    sourceCompatibility = 11
    targetCompatibility = 11

    group 'gov.cms.ab2d'

    dependencies {
        implementation "org.projectlombok:lombok:$lombokVersion"
        implementation "com.github.spotbugs:spotbugs-annotations:$spotbugsVersion"

        annotationProcessor "org.projectlombok:lombok:$lombokVersion"

        testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    jar {
        processResources.exclude('checkstyle.xml')
        processResources.exclude('spotbugs-filter.xml')
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        dependsOn test
        dependsOn jacocoTestCoverageVerification
    }

    jacoco {
        toolVersion = "0.8.7"
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.80
                }
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }

    artifactory {
        contextUrl = project.artifactoryLoc

        publish {

            repository {
                repoKey = "${deployerRepo}"
                username = project.artifactory_user
                password = project.artifactory_password
                maven = true

            }
            defaults {
                publications('mavenJava')
                publishArtifacts = true
                publishBuildInfo = false
            }
        }
        resolve {
            repository {
                repoKey = "${resolverRepo}"
                username = project.artifactory_user
                password = project.artifactory_password
                maven = true
            }
        }
    }
}

gradle.buildFinished {

    if (!rootProject.ext.skippedTests.isEmpty()) {
        println "Skipped Tests: "
        for (String skippedTestDesc : rootProject.ext.skippedTests) {
            println "\t" + skippedTestDesc
        }
    }

    if (!rootProject.ext.failedTests.isEmpty()) {
        println "Failing Tests: "
        for (String failedTestDesc : rootProject.ext.failedTests) {
            println "\t" + failedTestDesc
        }
    }

    if (!rootProject.ext.testSuites.isEmpty()) {
        println "Test Suite Summary: "
        println rootProject.ext.testSuites
    }
}